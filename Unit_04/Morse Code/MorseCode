/**
 * This code is to take the string and convert it into the morse code output. 
 * 
 * @author Annabel Hartmann
 * @version 2/8/2018
 */ 

import java.util.*;
import java.io.File;
import java.io.IOException;

public class MorseCode {
    //This is to initialize the input, and creates the morse code equivalent
    private static String[] code; 
    private static String phrase;
    private static String phraseSolved;
    
    public MorseCode(String p) {
        code = new String[36];
        phrase = p;
        phraseSolved = "";
    }
    
    public static String[] read() throws IOException {
        Scanner in = new Scanner(new File("morsecode.txt"));
        String a = phrase;
        int i = 0;
        
        while(in.hasNext()) {
            String b = in.next();
            code[i] = b;
            i++;
        }
        return code;
    }
    
    public static void Convert() {
      char[] alpha = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'};
      char[] num = {'0','1','2','3','4','5','6','7','8','9'};
      int i = 0;
      int a = 0;
      char l;
      int b = 0;
      phrase  = phrase.toLowerCase();
      
      for(i = 0; i < phrase.length(); i++) {  
        l = phrase.charAt(i);
        for ( a = 0 ; a < alpha.length ; a++ ) {
               if ( l == alpha[a] ) {
                   phraseSolved+= code[a];
                    }
        }
      }
      
      for(i = 0; i < phrase.length(); i++) {  
        b = phrase.charAt(i);
        
        for ( a = 0 ; a < num.length ; a++ ) {
               if ( b == num[a] ) {
                   phraseSolved+= "    " + code[a+25];
                  }
        }
      }
    }
    
    public static String getPhraseSolved() { //getPhraseSolved so that way MorseCodeTester can format it.
        return phraseSolved;
    }
    
}
