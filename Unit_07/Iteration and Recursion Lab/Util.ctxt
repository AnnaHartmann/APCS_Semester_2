#BlueJ class context
comment0.target=Util
comment0.text=\r\n\ Provides\ iterative\ and\ recursive\ methods\ for\ a\ variety\ of\ uses.\r\n
comment1.params=n
comment1.target=long\ iterativeFactorial(int)
comment1.text=\r\n\ Calculates\ the\ factorial\ of\ a\ number\ iteratively.\r\n\ @param\ n\ Number\ to\ be\ processed.\r\n\ @return\ Factorial\ of\ number\ specified.\r\n
comment10.params=array
comment10.target=long\ recursiveArraySum(int[])
comment10.text=\r\n\ Calculates\ the\ sum\ of\ all\ numbers\ in\ an\ array\ recursively.\r\n\ @param\ array\ Array\ to\ be\ processed.\r\n\ @return\ Sum\ of\ elements\ in\ the\ array.\r\n
comment11.params=array\ index
comment11.target=long\ recursiveArraySumHelper(int[],\ int)
comment11.text=\r\n\ Provides\ the\ recursive\ processing\ needed\ by\ recursiveArraySum().\r\n\ @param\ array\ Array\ to\ be\ processed.\r\n\ @param\ index\ Current\ index\ being\ processed.\r\n\ @return\ Sum\ of\ elements\ in\ the\ array.\r\n
comment12.params=array
comment12.target=int\ iterativeCountOnlyEvens(int[])
comment12.text=\r\n\ Iteratively\ counts\ the\ number\ of\ even\ numbers\ in\ an\ array.\r\n\ @param\ array\ Array\ to\ be\ processed.\r\n\ @return\ Number\ of\ even\ numbers\ in\ the\ array.\r\n
comment13.params=array
comment13.target=int\ recursiveCountOnlyEvens(int[])
comment13.text=\r\n\ Recursively\ counts\ the\ number\ of\ even\ numbers\ in\ an\ array.\r\n\ @param\ array\ Array\ to\ be\ processed.\r\n\ @return\ Number\ of\ even\ numbers\ in\ the\ array.\r\n
comment14.params=array\ index
comment14.target=int\ recursiveCountOnlyEvensHelper(int[],\ int)
comment14.text=\r\n\ Provides\ the\ recursive\ processing\ needed\ by\ recursiveCountOnlyEvens().\r\n\ @param\ array\ Array\ to\ be\ processed.\r\n\ @param\ index\ Current\ index\ being\ processed.\r\n\ @return\ Sum\ of\ elements\ in\ the\ array.\r\n
comment2.params=n
comment2.target=long\ recursiveFactorial(int)
comment2.text=\r\n\ Calculates\ the\ factorial\ of\ a\ number\ recursively.\r\n\ @param\ n\ Number\ to\ be\ processed.\r\n\ @return\ Factorial\ of\ number\ specified.\r\n
comment3.params=n
comment3.target=int\ iterativeDigitSum(long)
comment3.text=\r\n\ Calculates\ the\ sum\ of\ the\ digits\ in\ a\ number\ iteratively.\r\n\ @param\ n\ Number\ to\ be\ processed.\r\n\ @return\ Sum\ of\ the\ number's\ digits.\r\n
comment4.params=n
comment4.target=int\ recursiveDigitSum(long)
comment4.text=\r\n\ Calculates\ the\ sum\ of\ the\ digits\ in\ a\ number\ recursively.\r\n\ @param\ n\ Number\ to\ be\ processed.\r\n\ @return\ Sum\ of\ the\ number's\ digits.\r\n
comment5.params=n
comment5.target=int\ iterativeFibonacci(int)
comment5.text=\r\n\ Calculates\ the\ nth\ value\ of\ the\ modern\ Fibonacci\ sequence\ iteratively.\r\n\ @param\ n\ Index\ of\ the\ Fibonacci\ sequence\ to\ be\ calculated.\r\n\ @return\ The\ value\ at\ index\ n\ of\ the\ Fibonacci\ sequence.\r\n
comment6.params=n
comment6.target=long\ recursiveFibonacci(int)
comment6.text=\r\n\ Calculates\ the\ nth\ value\ of\ the\ modern\ Fibonacci\ sequence\ recursively.\r\n\ @param\ n\ Index\ of\ the\ Fibonacci\ sequence\ to\ be\ calculated.\r\n\ @return\ The\ value\ at\ index\ n\ of\ the\ Fibonacci\ sequence.\r\n
comment7.params=inputString\ count
comment7.target=java.lang.String\ iterativeStringGen(java.lang.String,\ int)
comment7.text=\r\n\ Iteratively\ generates\ a\ string\ made\ of\ n\ copies\ of\ a\ supplied\ input\ \r\n\ string\ separated\ by\ a\ comma\ and\ a\ space.\ \r\n\ @param\ inputString\ String\ to\ be\ repeated.\r\n\ @param\ count\ Number\ of\ times\ to\ repeat\ the\ input\ string.\r\n\ @return\ New\ constructed\ string.\r\n
comment8.params=inputString\ count
comment8.target=java.lang.String\ recursiveStringGen(java.lang.String,\ int)
comment8.text=\r\n\ Recursively\ generates\ a\ string\ made\ of\ n\ copies\ of\ a\ supplied\ input\ \r\n\ string\ separated\ by\ a\ comma\ and\ a\ space.\ \r\n\ @param\ inputString\ String\ to\ be\ repeated.\r\n\ @param\ count\ Number\ of\ times\ to\ repeat\ the\ input\ string.\r\n\ @return\ New\ constructed\ string.\r\n
comment9.params=array
comment9.target=long\ iterativeArraySum(int[])
comment9.text=\r\n\ Calculates\ the\ sum\ of\ all\ numbers\ in\ an\ array\ iteratively.\r\n\ @param\ array\ Array\ to\ be\ processed.\r\n\ @return\ Sum\ of\ elements\ in\ the\ array.\r\n
numComments=15
